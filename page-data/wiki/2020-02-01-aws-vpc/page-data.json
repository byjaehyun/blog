{"componentChunkName":"component---src-templates-post-js","path":"/wiki/2020-02-01-aws-vpc/","result":{"data":{"markdownRemark":{"html":"<h1>AWS VPC</h1>\n<h2>공식문서</h2>\n<p><a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/CHAP_Tutorials.WebServerDB.CreateVPC.html\">Tutorial: Create an Amazon VPC for use with a DB instance</a> 를 따라하면 감을 잡을 수 있다.</p>\n<h2>유투브</h2>\n<p><a href=\"https://www.youtube.com/watch?v=R1UWYQYTPKo\">https://www.youtube.com/watch?v=R1UWYQYTPKo</a></p>\n<ul>\n<li>\n<p>4가지 단계 :</p>\n<ol>\n<li>내부적으로 사용할 private IP 주소 선택</li>\n<li>CIDR방식 사용.</li>\n<li>CIDR range example:</li>\n<li>172.31.0.0/16</li>\n<li>\n<p>1010 1100 0001 1111 0000 0000 0000 0000</p>\n<ul>\n<li>(/16) 마스킹 16비트 ⇒ 앞의 16비트는 고정이며 나머지 뒤의 16 변경 가능하다. 즉 2^16 개의 네트워크를 가질 수 있다.</li>\n<li>/16 는 64K 개의 어드레스를 가질 수 있다. 어드레스 개수가 부족하지 않도록.</li>\n<li>RFC1918 를 추천한다.</li>\n</ul>\n</li>\n<li>가용영역별 서브넷 설정</li>\n<li>마스킹 값을 /24 로 하면 2개는 brodcass, 3개는 관리목적으로 aws 가 사용 256 - 5 = 251 개 가능</li>\n<li>인터넷으로 향하는 route 설정</li>\n<li>Route table 은 패킷이 이동하는 규칙</li>\n<li>VPC 에는 기본 route table 이 존재</li>\n<li>기본 라우팅 테이블에는 172.31.0.0/16 이 박혀있음. 이는 우선 외부로 패킷을 보내지 말고 내부 VPC 로 패킷을 보여줘라. (taget local) 이 쓰여저있음</li>\n<li>하지만 서브넷 마다 다른 route table 을 할당할 수 있음. ⇒ 어떤 서브넷은 인터넷과 통신하고 다른것은 아닐 수도 있음</li>\n<li>Internet Gateway</li>\n<li>0.0.0.0/0 이 Igw 에 연결되어 있음. 이를 통해 인터넷으로 페킹을 보낼 수 있음</li>\n<li>0.0.0.0/0 = anywhere. 모든 네트워크를 표현한 것이다.</li>\n<li>VPC 가아닌 것은 모든 인터넷으로 보여줘라</li>\n<li>VPC로부터의 트래픽 설정 (방화벽)</li>\n<li>크게 2가지 기능 있다. Network ACLs / Security Groups</li>\n<li>Network ACLs: 서브넷 단위로 적용 가능하다. stateless 하게 작동한다</li>\n<li>Security Groups: statefull 하게 작동한다.</li>\n<li>statefull/ stateless: 웹서버가 디비에 접근하는 경우를 생각해보자. statefull 방식은 접근하는 경우 커넥션을 유지한다. inboud  를 허용하면 커넥션이 유지되기때문에 outbound 는 자연스레 열린다. 반면 Network ACLs stateless 는 인바운드와 아웃바인드의 설정을 각각 따로 해주어야 한다.</li>\n</ol>\n</li>\n</ul>\n<p>인터넷으로 연결하는 경로 즉 라우팅 테이블을 설정해야한다.</p>\n<p>CIDR란?</p>\n<p>대표 시나리오</p>\n<ul>\n<li>\n<p><a href=\"https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Scenarios.html\">https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Scenarios.html</a></p>\n<ul>\n<li><a href=\"https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Scenario2.html\">https://docs.aws.amazon.com/vpc/latest/userguide/VPC_Scenario2.html</a></li>\n</ul>\n</li>\n</ul>\n<p><a href=\"https://docs.aws.amazon.com/ko_kr/AmazonRDS/latest/UserGuide/CHAP_Tutorials.WebServerDB.CreateVPC.html\">https://docs.aws.amazon.com/ko_kr/AmazonRDS/latest/UserGuide/CHAP_Tutorials.WebServerDB.CreateVPC.html</a></p>\n<p><a href=\"https://docs.aws.amazon.com/ko_kr/AmazonRDS/latest/UserGuide/CHAP_Tutorials.WebServerDB.CreateVPC.html\">https://docs.aws.amazon.com/ko<em>kr/AmazonRDS/latest/UserGuide/CHAP</em>Tutorials.WebServerDB.CreateVPC.htm</a></p>\n<p><a href=\"https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.Scenarios.html#USER_VPC.Scenario4\">https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.Scenarios.html#USER_VPC.Scenario4</a></p>","frontmatter":{"title":"AWS VPC","date":"2020-02-01","description":null,"keywords":null,"image":"/img/default.jpeg"}},"site":{"siteMetadata":{"image":"/img/og.jpeg"}}},"pageContext":{"slug":"/wiki/2020-02-01-aws-vpc/"}},"staticQueryHashes":[]}