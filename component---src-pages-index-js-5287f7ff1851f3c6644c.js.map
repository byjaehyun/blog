{"version":3,"file":"component---src-pages-index-js-5287f7ff1851f3c6644c.js","mappings":"wOAIA,MAAMA,EAAUC,EAAAA,QAAOC,QAAOC,WAAA,CAAAC,YAAA,wBAAAC,YAAA,gBAAdJ,CAAc,0DAI1BK,EAAAA,GAGEC,EAAON,EAAAA,QAAOO,IAAGL,WAAA,CAAAC,YAAA,qBAAAC,YAAA,gBAAVJ,CAAU,mDAKjBQ,EAAQR,EAAAA,QAAOS,GAAEP,WAAA,CAAAC,YAAA,sBAAAC,YAAA,gBAATJ,CAAS,+GASjBU,EAAcV,EAAAA,QAAOO,IAAGL,WAAA,CAAAC,YAAA,4BAAAC,YAAA,gBAAVJ,CAAU,0FAuB9B,MAdqBW,IAAA,IAAC,MAAEC,EAAK,KAAEC,EAAI,YAAEC,GAAaH,EAAA,OAChDI,EAAAA,cAAChB,EAAO,KACNgB,EAAAA,cAACT,EAAI,KAAEO,GACPE,EAAAA,cAACP,EAAK,KAAEI,GAENE,GACAC,EAAAA,cAACL,EAAW,KACTI,EAAYE,MAAM,EATT,KAUTF,EAAYG,OAVH,KAUyB,OAG/B,ECvCZ,MAAMlB,EAAUC,EAAAA,QAAOO,IAAGL,WAAA,CAAAC,YAAA,oBAAAC,YAAA,gBAAVJ,CAAU,sDAIvB,IAEGkB,EAAQ,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,KAmBX,OAnBWC,EAAAA,EAAAA,GAAAJ,EAAAC,GAAAD,EAAAK,UACZC,OAAA,WACE,OACET,EAAAA,cAAChB,EAAO,KACL0B,KAAKC,MAAMC,cAAcC,KAAIC,GAC5Bd,EAAAA,cAAA,KACEe,IAAKD,EAAKE,GACVC,KAAMH,EAAKI,OAAOC,KAClBC,MAAO,CAAEC,eAAgB,OAAQC,MAAO,YAExCtB,EAAAA,cAACuB,EAAY,CACX1B,MAAOiB,EAAKU,YAAY3B,MACxBC,KAAMgB,EAAKU,YAAY1B,KACvBC,YAAae,EAAKU,YAAYzB,iBAM1C,EAACI,CAAA,CAnBW,CAASH,EAAAA,WA0BvB,QCnC4C,IAEtCyB,EAAS,SAAArB,GAAA,SAAAqB,IAAA,OAAArB,EAAAC,MAAA,KAAAC,YAAA,KAWZ,OAXYC,EAAAA,EAAAA,GAAAkB,EAAArB,GAAAqB,EAAAjB,UACbC,OAAA,WACE,OACET,EAAAA,cAAC0B,EAAAA,EAAM,KACL1B,EAAAA,cAACG,EAAQ,CACPS,cAAeF,KAAKC,MAAMgB,KAAKC,kBAAkBC,MAAMhB,KACrDjB,IAAA,IAAC,KAAEkB,GAAMlB,EAAA,OAAKkB,CAAI,MAK5B,EAACW,CAAA,CAXY,CAASzB,EAAAA,WAcxB,O","sources":["webpack://gatsby-starter-default/./src/component/PostListItem.js","webpack://gatsby-starter-default/./src/component/PostList.js","webpack://gatsby-starter-default/./src/pages/index.js"],"sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport hoverCss from './hoverCss'\n\nconst Wrapper = styled.article`\n  margin-bottom: 1rem;\n  text-align: center;\n  padding: 1rem;\n  ${hoverCss}\n`\n\nconst Meta = styled.div`\n  font-size: 0.8rem;\n  color: var(--subtitle-color);\n`\n\nconst Title = styled.h2`\n  font-size: 1.2rem;\n  line-height: 1.1;\n  margin: 0;\n  margin-bottom: 5px;\n  word-break: keep-all;\n  color: var(--title-color);\n`\n\nconst Description = styled.div`\n  color: var(--subtitle-color);\n  font-size: 0.9rem;\n  line-height: 1.2rem;\n  word-break: keep-all;\n`\n\nconst maxLength = 100;\n\nconst PostListItem = ({ title, date, description }) => (\n  <Wrapper>\n    <Meta>{date}</Meta>\n    <Title>{title}</Title>\n    {\n      description &&\n      <Description>\n        {description.slice(0, maxLength)}\n        {description.length > maxLength && '...'}\n      </Description>\n    }\n  </Wrapper>\n)\n\nexport default PostListItem\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nimport PostListItem from './PostListItem'\n\nconst Wrapper = styled.div`\n  margin: 0 auto;\n  text-align: center;\n  max-width: 480px;\n  `\n\nclass PostList extends React.Component {\n  render() {\n    return (\n      <Wrapper>\n        {this.props.markdownNodes.map(node => (\n          <a\n            key={node.id}\n            href={node.fields.slug}\n            style={{ textDecoration: `none`, color: `inherit` }}\n          >\n            <PostListItem\n              title={node.frontmatter.title}\n              date={node.frontmatter.date}\n              description={node.frontmatter.description}\n            />\n          </a>\n        ))}\n      </Wrapper>\n    )\n  }\n}\n\nPostList.propTypes = {\n  markdownNodes: PropTypes.array,\n}\n\nexport default PostList\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../component/Layout'\nimport PostList from '../component/PostList'\n\nclass IndexPage extends React.Component {\n  render() {\n    return (\n      <Layout>  \n        <PostList\n          markdownNodes={this.props.data.allMarkdownRemark.edges.map(\n            ({ node }) => node\n          )}\n        />\n      </Layout>\n    )\n  }\n}\n\nexport default IndexPage\n\nexport const query = graphql`\nquery IndexQuery {\n  allMarkdownRemark(sort: {frontmatter: {date: DESC}}) {\n    totalCount\n    edges {\n      node {\n        id\n        frontmatter {\n          title\n          date(formatString: \"YYYY.MM.DD\")\n          description\n        }\n        fields {\n          slug\n        }\n      }\n    }\n  }\n}\n`\n"],"names":["Wrapper","styled","article","withConfig","displayName","componentId","hoverCss","Meta","div","Title","h2","Description","_ref","title","date","description","React","slice","length","PostList","_React$Component","apply","arguments","_inheritsLoose","prototype","render","this","props","markdownNodes","map","node","key","id","href","fields","slug","style","textDecoration","color","PostListItem","frontmatter","IndexPage","Layout","data","allMarkdownRemark","edges"],"sourceRoot":""}