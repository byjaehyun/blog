{"version":3,"file":"component---src-pages-index-js-fff2400a019eb3531b4c.js","mappings":"wOAIA,MAAMA,EAAUC,EAAAA,QAAOC,QAAOC,WAAA,CAAAC,YAAA,wBAAAC,YAAA,gBAAdJ,CAAc,8DAIxBK,EAAAA,GAGAC,EAAON,EAAAA,QAAOO,IAAGL,WAAA,CAAAC,YAAA,qBAAAC,YAAA,gBAAVJ,CAAU,mDAKjBQ,EAAQR,EAAAA,QAAOS,GAAEP,WAAA,CAAAC,YAAA,sBAAAC,YAAA,gBAATJ,CAAS,mGAQjBU,EAAcV,EAAAA,QAAOO,IAAGL,WAAA,CAAAC,YAAA,4BAAAC,YAAA,gBAAVJ,CAAU,uEAsB9B,MAdqBW,IAAA,IAAC,MAACC,EAAK,KAAEC,EAAI,YAAEC,GAAYH,EAAA,OAC5CI,EAAAA,cAAChB,EAAO,KACJgB,EAAAA,cAACT,EAAI,KAAEO,GACPE,EAAAA,cAACP,EAAK,KAAEI,GAEJE,GACAC,EAAAA,cAACL,EAAW,KACPI,EAAYE,MAAM,EATjB,KAUDF,EAAYG,OAVX,KAUiC,OAGrC,ECrCd,MAAMlB,EAAUC,EAAAA,QAAOO,IAAGL,WAAA,CAAAC,YAAA,oBAAAC,YAAA,gBAAVJ,CAAU,sDAIvB,IAEGkB,EAAQ,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,KAmBX,OAnBWC,EAAAA,EAAAA,GAAAJ,EAAAC,GAAAD,EAAAK,UACZC,OAAA,WACE,OACET,EAAAA,cAAChB,EAAO,KACL0B,KAAKC,MAAMC,cAAcC,KAAIC,GAC5Bd,EAAAA,cAAA,KACEe,IAAKD,EAAKE,GACVC,KAAMH,EAAKI,OAAOC,KAClBC,MAAO,CAAEC,eAAgB,OAAQC,MAAO,YAExCtB,EAAAA,cAACuB,EAAY,CACX1B,MAAOiB,EAAKU,YAAY3B,MACxBC,KAAMgB,EAAKU,YAAY1B,KACvBC,YAAae,EAAKU,YAAYzB,iBAM1C,EAACI,CAAA,CAnBW,CAASH,EAAAA,WA0BvB,Q,UC/BuBf,EAAAA,QAAOO,IAAGL,WAAA,CAAAC,YAAA,wBAAAC,YAAA,eAAVJ,CAAU,qDAMbA,EAAAA,QAAOwC,IAAGtC,WAAA,CAAAC,YAAA,qBAAAC,YAAA,eAAVJ,CAAU,qEAK5B,IAGIyC,EAAS,SAAAtB,GAAA,SAAAsB,IAAA,OAAAtB,EAAAC,MAAA,KAAAC,YAAA,KAiBV,OAjBUC,EAAAA,EAAAA,GAAAmB,EAAAtB,GAAAsB,EAAAlB,UACXC,OAAA,WACI,OACIT,EAAAA,cAAC2B,EAAAA,EAAM,KACH3B,EAAAA,cAAC4B,EAAAA,EAAM,KACH5B,EAAAA,cAAA,QAAM6B,IAAI,YAAYZ,KAAK,qCAK/BjB,EAAAA,cAACG,EAAQ,CACLS,cAAeF,KAAKC,MAAMmB,KAAKC,kBAAkBC,MAAMnB,KACnDjB,IAAA,IAAC,KAACkB,GAAKlB,EAAA,OAAKkB,CAAI,MAKpC,EAACY,CAAA,CAjBU,CAAS1B,EAAAA,WAoBxB,O","sources":["webpack://gatsby-starter-default/./src/component/PostListItem.js","webpack://gatsby-starter-default/./src/component/PostList.js","webpack://gatsby-starter-default/./src/pages/index.js"],"sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport hoverCss from './hoverCss'\n\nconst Wrapper = styled.article`\n    margin-bottom: 0.6rem;\n    text-align: center;\n    padding: 0.5rem;\n    ${hoverCss}\n`\n\nconst Meta = styled.div`\n    font-size: 0.8rem;\n    color: var(--subtitle-color);\n`\n\nconst Title = styled.h2`\n    font-size: 1.2rem;\n    line-height: 1.1;\n    margin: 0 0 2px;\n    word-break: keep-all;\n    color: var(--title-color);\n`\n\nconst Description = styled.div`\n    color: var(--subtitle-color);\n    font-size: 0.8rem;\n    word-break: keep-all;\n`\n\nconst maxLength = 100;\n\nconst PostListItem = ({title, date, description}) => (\n    <Wrapper>\n        <Meta>{date}</Meta>\n        <Title>{title}</Title>\n        {\n            description &&\n            <Description>\n                {description.slice(0, maxLength)}\n                {description.length > maxLength && '...'}\n            </Description>\n        }\n    </Wrapper>\n)\n\nexport default PostListItem\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styled from 'styled-components'\n\nimport PostListItem from './PostListItem'\n\nconst Wrapper = styled.div`\n  margin: 0 auto;\n  text-align: center;\n  max-width: 480px;\n  `\n\nclass PostList extends React.Component {\n  render() {\n    return (\n      <Wrapper>\n        {this.props.markdownNodes.map(node => (\n          <a\n            key={node.id}\n            href={node.fields.slug}\n            style={{ textDecoration: `none`, color: `inherit` }}\n          >\n            <PostListItem\n              title={node.frontmatter.title}\n              date={node.frontmatter.date}\n              description={node.frontmatter.description}\n            />\n          </a>\n        ))}\n      </Wrapper>\n    )\n  }\n}\n\nPostList.propTypes = {\n  markdownNodes: PropTypes.array,\n}\n\nexport default PostList\n","import React from 'react'\nimport {graphql} from 'gatsby'\nimport Layout from '../component/Layout'\nimport PostList from '../component/PostList'\nimport Helmet from \"react-helmet\";\nimport styled from 'styled-components';\n\nconst ImageContainer = styled.div`\n  width: 100%; /* 원하는 너비에 맞추세요 */\n  aspect-ratio: 16 / 6;\n  overflow: hidden;\n`;\n\nconst StyledImage = styled.img`\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  object-position: center;\n`;\n\n\nclass IndexPage extends React.Component {\n    render() {\n        return (\n            <Layout>\n                <Helmet>\n                    <link rel=\"canonical\" href=\"https://jayonthegreen.github.io\"/>\n                </Helmet>\n                {/*<ImageContainer>*/}\n                {/*    <StyledImage src=\"/img/CE126160-C3DD-48B2-964F-569530639FB9_1_201_a.jpeg\" alt=\"sample image\" />*/}\n                {/*</ImageContainer>*/}\n                <PostList\n                    markdownNodes={this.props.data.allMarkdownRemark.edges.map(\n                        ({node}) => node\n                    )}\n                />\n            </Layout>\n        )\n    }\n}\n\nexport default IndexPage\n\nexport const query = graphql`\nquery IndexQuery {\n  allMarkdownRemark(sort: {frontmatter: {date: DESC}}) {\n    totalCount\n    edges {\n      node {\n        id\n        frontmatter {\n          title\n          date(formatString: \"YYYY.MM.DD\")\n          description\n        }\n        fields {\n          slug\n        }\n      }\n    }\n  }\n}\n`\n"],"names":["Wrapper","styled","article","withConfig","displayName","componentId","hoverCss","Meta","div","Title","h2","Description","_ref","title","date","description","React","slice","length","PostList","_React$Component","apply","arguments","_inheritsLoose","prototype","render","this","props","markdownNodes","map","node","key","id","href","fields","slug","style","textDecoration","color","PostListItem","frontmatter","img","IndexPage","Layout","Helmet","rel","data","allMarkdownRemark","edges"],"sourceRoot":""}